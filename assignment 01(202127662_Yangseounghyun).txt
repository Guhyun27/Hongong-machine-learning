#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>

typedef struct {
    char name[21];
    char phone_number[16];
    float amount;
    char type[2];
} Info;

typedef union {
    Info consumer;
    Info seller;
} Record;

int main() {
    int num = 0, consumer_num = 0, seller_num = 0;
    char name[21], type[2], phone_number[16];
    float amount, consumer_amount_sum = 0, seller_amount_sum = 0, avg_consumer, avg_seller;
    Record list[100], lowest_consumer, best_consumer, lowest_sell, best_sell;

    printf("Please enter your customer information (<Name> <Customer Type> <Phone Number> <Amount>):\n");
    while (1) {
        scanf("%s", name);
        if (strcmp(name, "--") == 0) {
            break;
        }
        scanf("%s %s %f", type, phone_number, &amount);

        Record record;
        if (strcmp(type, "C") == 0)
        {
            strncpy(record.consumer.name, name, sizeof(record.consumer.name));
            strncpy(record.consumer.type, type, sizeof(record.consumer.type));
            strncpy(record.consumer.phone_number, phone_number, sizeof(record.consumer.phone_number));
            record.consumer.amount = amount;
            list[num] = record;
            num++;
            consumer_num++;
            consumer_amount_sum += amount;
            if (consumer_num == 1) {
                lowest_consumer = record;
                best_consumer = record;
            }
            else {
                if (record.consumer.amount < lowest_consumer.consumer.amount) {
                    lowest_consumer = record;
                }
                else if (record.consumer.amount > best_consumer.consumer.amount) {
                    best_consumer = record;
                }
            }
        }
        else if (strcmp(type, "S") == 0)
        {
            strncpy(record.seller.name, name, sizeof(record.seller.name));
            strncpy(record.seller.type, type, sizeof(record.seller.type));
            strncpy(record.seller.phone_number, phone_number, sizeof(record.seller.phone_number));
            record.seller.amount = amount;
            list[num] = record;
            num++;
            seller_num++;
            seller_amount_sum += amount;
            if (seller_num == 1) {
                lowest_sell = record;
                best_sell = record;
            }
            else {
                if (record.seller.amount < lowest_sell.seller.amount) {
                    lowest_sell = record;
                } 
                else if (record.seller.amount > best_sell.seller.amount) {
                    best_sell = record;
                }
            }
        }
    }

    if (consumer_num > 0) {
        avg_consumer = consumer_amount_sum / consumer_num;
    }
    else {
        avg_consumer = 0;
    }

    if (seller_num > 0) {
        avg_seller = seller_amount_sum / seller_num;
    }
    else {
        avg_seller = 0;
    }

    printf("Lowest consumer: %s %.0f\n", lowest_consumer.consumer.name, lowest_consumer.consumer.amount);
    printf("Best consumer: %s %.0f\n", best_consumer.consumer.name, best_consumer.consumer.amount);
    printf("Average consumer amount: %.1f\n",avg_consumer);
    printf("Lowest seller: %s %.0f\n", lowest_sell.consumer.name, lowest_sell.consumer.amount);
    printf("Top seller: %s %.0f\n", best_sell.consumer.name, best_sell.consumer.amount);
    printf("Average seller amount: %.1f\n", avg_seller);

    return 0;
}